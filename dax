dim_datumy = 
--krok4: ADDCOLUMNS() přidává sloupce do tabulky vrácené funkcí ADDCOLUMNS()
ADDCOLUMNS(
    --krok3: ADDCOLUMNS() přidává sloupce do tabulky vrácené funkcí SELECTCOLUMNS()
    ADDCOLUMNS(
        --krok2: SELECTCOLUMNS() vybírá sloupec [date] vrácený funkcí CALENDARAUTO()
        -- a vrací jej jako sloupec [datum]
        SELECTCOLUMNS(
            --krok1: CALENDARAUTO() vrací tabulku se sloupcem [date]
            CALENDARAUTO(),
        "datum",[Date]),
    "rok",YEAR([datum]),
    "mesic",MONTH([datum]),
    "den",DAY([datum]),
    "tyden",WEEKNUM([datum],21),
    "den tydne",WEEKDAY([datum],2)),
"pracovni den",
SWITCH(TRUE(),
[den tydne] > 5,FALSE(),
[mesic] = 5 && [den] = 8,FALSE(),
[mesic] = 5 && [den] = 1,FALSE(),
[datum] IN {
    DATE(2020,04,13),
    DATE(2019,04,20)
    },FALSE(),TRUE()))

_________________________________________________

Míra = 

VAR predchozi_rok = SELECTEDVALUE(data[rok]) - 1

-- takto NE
VAR varianta1 = 
CALCULATE(
    --krok3: SUM() scita sloupec [Srazky] tabulky vracene funkci FILTER()
    SUM(data[Srazky]),
    --krok2: Funkce FILTER() nastavuje filtry na sloupce tabulky vracene funkci ALL() a vraci tabulku
    FILTER(
        --krok1: Funkce ALL() vrati kopii tabulky data zbavenou vsech filtru
        ALL(data),
    data[Lokalita] = SELECTEDVALUE(data[Lokalita])
    && data[rok] = predchozi_rok))


-- takto ANO pokud nefunguje varianta3
VAR varianta2 = 
CALCULATE(
    SUM(data[Srazky]),
    FILTER(
        ALL(data[rok]),
    data[rok] = predchozi_rok))

-- takto ANO
VAR varianta3 = 
CALCULATE(
    SUM(data[Srazky]),
    data[rok] = predchozi_rok)

return varianta3

______________________________________________________________________

02 suma srazek mesic 7 = 

-- takto NE
-- zde nedochazi ke zruseni pripadneho filtru nad sloupcem [mesic]
VAR varianta1 = 
CALCULATE(
    SUM(data[Srazky]),
    FILTER(data,
        data[mesic] = 7))
-- takto ANO, pokud nefunguje varianta3
-- zde nedochazi ke zruseni pripadneho filtru nad sloupcem [mesic]
VAR varianta2 = 
CALCULATE(
    SUM(data[Srazky]),
    FILTER(
        VALUES(data[mesic]),
    data[mesic] = 7)) 

-- takto ANO
-- zde dochazi ke zruseni pripadneho filtru nad sloupcem [mesic]
VAR varianta3 =
CALCULATE(
    SUM(data[Srazky]),
    data[mesic] = 7)

RETURN varianta2

_________________________________________________________

07 suma srazek vse = 

-- za vsechny zeme, roky

-- takto NE
VAR varianta1 = 
CALCULATE(
    SUM(data[Srazky]),
    ALL(data))

-- takto ANO
VAR varianta2 =
CALCULATE(
    SUM(data[Srazky]),
    ALL(dim_lokality[Zeme]),ALL(dim_datumy[rok]))

RETURN varianta2

________________________________________________________

26 nejsrazkovejsi lokalita = 
-- lokality s nejvyssimi rocnimi srazkami

VAR _tabulka =
    ADDCOLUMNS(
        ALL(data[Lokalita]),
    "srazky",
    CALCULATE(SUM(data[Srazky])))

VAR _maximalni_srazky = 
    MAXX(
        _tabulka,
    [srazky])

RETURN
CONCATENATEX(
    FILTER(_tabulka,
    [srazky] = _maximalni_srazky),
    data[Lokalita],", ")

_________________________________________

27 nejsrazkovejsi lokalita = 

VAR _tabulka = 
ADDCOLUMNS(
    ALL(data[Lokalita]),
"rocni srazky",
CALCULATE(SUM(data[Srazky])))

VAR _maximalni_hodnota = MAXX(_tabulka,[rocni srazky])

RETURN
CONCATENATEX(
    FILTER(_tabulka,[rocni srazky] = _maximalni_hodnota),data[Lokalita],", ")

__________________________________________________


_max srazky = 

VAR _max_srazky = MAXX(
ALL(dim_datumy[mesic]),
CALCULATE(SUM(data[Srazky])))

VAR _min_srazky = MINX(
ALL(dim_datumy[mesic]),
CALCULATE(SUM(data[Srazky])))
return

SWITCH(TRUE(),
SUM(data[Srazky]) = _max_srazky,"GOLD",
SUM(data[Srazky]) = _min_srazky,"GRAY")
